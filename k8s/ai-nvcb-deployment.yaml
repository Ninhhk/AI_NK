apiVersion: v1
kind: Namespace
metadata:
  name: ai-nvcb
  labels:
    name: ai-nvcb
    environment: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-nvcb-config
  namespace: ai-nvcb
data:
  # Application Configuration
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "production"
  DEBUG: "false"
  
  # Server Configuration
  HOST: "0.0.0.0"
  PORT: "8000"
  WORKERS: "4"
  
  # Database Configuration
  DATABASE_URL: "sqlite:///app/storage/database.sqlite"
  
  # Redis Configuration
  REDIS_URL: "redis://redis-service:6379/0"
  REDIS_CACHE_ENABLED: "true"
  
  # File Storage
  UPLOAD_DIR: "/app/storage/uploads"
  MAX_FILE_SIZE: "104857600"
  ALLOWED_EXTENSIONS: "pdf,txt,docx,pptx,md"
  
  # Security
  SECRET_KEY: "change-this-in-production"
  CORS_ORIGINS: "*"
  TRUSTED_HOSTS: "*"
  
  # Features
  ENABLE_CLEANUP: "true"
  ENABLE_MONITORING: "true"
  ENABLE_METRICS: "true"
  
  # Logging
  LOG_FORMAT: "json"
  ENABLE_FILE_LOGGING: "true"
  ENABLE_CONSOLE_LOGGING: "true"
  
  # Performance
  ENABLE_REQUEST_CACHING: "true"
  ENABLE_RESPONSE_COMPRESSION: "true"
  MAX_CONNECTIONS: "100"
  
  # Health Checks
  HEALTH_CHECK_INTERVAL: "60"
  HEALTH_CHECK_TIMEOUT: "10"
  
  # Backup
  BACKUP_ENABLED: "true"
  BACKUP_RETENTION_DAYS: "30"
  BACKUP_COMPRESSION: "true"
  
  # SSL
  SSL_DOMAINS: ""
  ENABLE_HSTS: "true"
  
  # Monitoring
  ENABLE_PROMETHEUS_LOGGING: "true"
  ENABLE_ELASTICSEARCH_LOGGING: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: ai-nvcb-secrets
  namespace: ai-nvcb
type: Opaque
data:
  # Base64 encoded secrets
  SECRET_KEY: Y2hhbmdlLXRoaXMtaW4tcHJvZHVjdGlvbg==
  ADMIN_PASSWORD: YWRtaW4xMjM=
  DATABASE_PASSWORD: ""
  REDIS_PASSWORD: ""
  SSL_CERT_PASSWORD: ""
  BACKUP_ENCRYPTION_PASSWORD: ""
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ai-nvcb-storage-pv
  namespace: ai-nvcb
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /data/ai-nvcb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-nvcb-storage-pvc
  namespace: ai-nvcb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-nvcb-backend
  namespace: ai-nvcb
  labels:
    app: ai-nvcb-backend
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-nvcb-backend
  template:
    metadata:
      labels:
        app: ai-nvcb-backend
        tier: backend
    spec:
      containers:
      - name: backend
        image: ai-nvcb:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        envFrom:
        - configMapRef:
            name: ai-nvcb-config
        - secretRef:
            name: ai-nvcb-secrets
        volumeMounts:
        - name: storage
          mountPath: /app/storage
        - name: logs
          mountPath: /app/logs
        - name: backups
          mountPath: /app/backups
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: ai-nvcb-storage-pvc
      - name: logs
        emptyDir: {}
      - name: backups
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: ai-nvcb
  labels:
    app: redis
    tier: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        tier: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - "allkeys-lru"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ai-nvcb-backend-service
  namespace: ai-nvcb
  labels:
    app: ai-nvcb-backend
spec:
  selector:
    app: ai-nvcb-backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: ai-nvcb
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-nvcb-ingress
  namespace: ai-nvcb
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: ai-nvcb-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-nvcb-backend-service
            port:
              number: 8000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-nvcb-service-account
  namespace: ai-nvcb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ai-nvcb-role
  namespace: ai-nvcb
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ai-nvcb-role-binding
  namespace: ai-nvcb
subjects:
- kind: ServiceAccount
  name: ai-nvcb-service-account
  namespace: ai-nvcb
roleRef:
  kind: Role
  name: ai-nvcb-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ai-nvcb-backend-pdb
  namespace: ai-nvcb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ai-nvcb-backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-nvcb-backend-hpa
  namespace: ai-nvcb
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-nvcb-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
